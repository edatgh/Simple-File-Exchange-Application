
                           --------- SFSA: Simple File Sharing Application ---------

                                                Edvardas Ges

                                                 2004/02/24


1. Idìja
--------

Po ilgù svarstymù, nusprend¾iau para¹yti programa, realizuojanèia filù apsikeitim± tarp keliù klientù.
Mano pasirinkimas pagrçstas reikalaujamu parodyti "client/server" bendravim±. Manau sç program± bus
puikus keliù klientù bei serverio bendravimo pavizdys.

2. Programos struktþra
----------------------

Programa susideda i¹ dviejù daliù, t.y. i¹ klientinìs dalies (client) ir serverinìs dalies (server).
Paleid¾iant klientinê programos dalç, vartotojui parodoma konsolì, kurioje jis gali çvedinìti koman-
das ir tokiu budu bendrauti su programos serveriu. Prisijungias prie serverio, klientas gali nusius-
ti jam failù s±ra¹±, kuriuos jis nori eksportuoti, bei parsisiusti failù s±ra¹±, kuriuos eksportuoja
kiti klientai. Kitaip tariant, kiekvienas klientas nusiunèia serveriui s±ra¹± eksportuojamù failu.
Tokiu budu serveryje laikomas bendras visù klientù eksportuojamù failù s±ra¹as. Kiekvienas klientas
gali u¾sisakyti norim± fail±. Kai çvyksta toks u¾sakymas, serverio pagalba nustatomas ry¹is tarp dviejù
klientù, t.y. kliento-u¾sakovo ir kliento-tiekìjo (tas klientas kuris turi reikiam± fail±). Toliau
vyksta bendravimas tik tarp tù dviejù klientù, o serveris gali toliau têsti kitù klientù u¾klausù ap-
tarnavim±.

3. Kliento/serverio ypatumai
----------------------------

Tam tikrù smulkmenù s±ra¹iukas.

3.1. Kliento ypatumai
---------------------

  o Eksportuojamù failù s±ra¹as nuskaitomas i¹ failo, kurio pavadinimas nurodytas komandinìje eilutìje.
    ©ito failo struktþra yra labai paprasta, kiekvienoje eiluteje yra pilnas failo pavadinimas. Tokiù
    eiluèiù bus lygiai tiek, kiek yra eksportuojamù failù.

  o Duomenys reikalingi prisijungti prie serverio, nurodomi komandinìje eilutìje. ©itie duomenys nìra
    privalomi, jie reikalingi kliento "elgesio" pagal nutylìjim± pakeitimui.

  o Jeigu vartotojas neçves programos parametrù, bus naudojami parametrai pagal nutylìjim±: tam tikras
    serverio porto numeris ir "loopback" IPv4 adresas (127.0.0.1), failai nebus eksportuojami.

3.2. Serverio ypatumai
----------------------

  o Serveriui reikalingi parametrai nurodomi komendinìje eilutìje.

  o Jeigu serveriui reikalingi parametrai nebus nurodyti komandinìje eilutìje, bus naudojami parametrai
    pagal nutylìjim±.

4. Kliento/serverio realizacija
-------------------------------

Dìtalus veikimo principù apra¹ymas.

4.1. Failù perdavimo mechanizmas
--------------------------------

Klientas (klientinì programos dalis) susideda i¹ dviejù daliù: failù serverio bei komandù interpreta-
toriaus. Failù serveris realizuotas kaip atskiras procesas, i¹vastas is pagrindinio klientinio proce-
so. Bendravimas tarp failù serverio ir pagrindinìs programos nevyksta, bet baigiant pagr. programos
darba, nusiunèiamas signalas failù serverio procesui. Tas signalas pasako, kad failù serveris turi u¾-
baigti savo darb±. Failù serveris atlieka pagrindinç programos darb± - realizuoja apsiketim± failais
tarp keliù klientù. Kiekvienas klientas turi failù serverç ir tik tarp tù serveriù vyksta bendravimas.
Kai klientas nusiunèia u¾klaus± serveriui, kuri pasako, jog tas klientas pageidauja parsisiusti ka¾kokç
fail±, toje u¾klausoje jis nurodo norimo failo pavadinim±. Serveris savo ruo¾tu per¾iurinìja visù
vartotojù (klientù) eksportuojamù failù s±ra¹us ir bando surasti vartotoj± (klient±) kuris turi fail±
su nurodytu pavadinimu. Jei toks vartotojas nebuvo surastas, t.y. tarp visù vartotojù nebuvo tokio, kas
turi reikiam± fail±, serveris nusiunèia klientui atitinkam± prane¹im±. Sekmìs atvejù (failas surastas),
serveris prisijungia prie failù serverio to kliento, kuris turi reikiam± fail± ir nusiunèia jam vis±
reikiam± informacij± apie klient± kuriam to failo reikia. Po ¹ito etapo, serveris têsia kitù klientù
u¾klausù apdorojim±. Prasideda bendravimas tarp dviejù klientù - kliento-u¾sakovo ir kliento-tiekìjo,
o tiksliau tarp jù failù serveriù. Tiekìjo failù serveris (toliau TFS) pagal turim± (gaut± i¹ ser-
verio) informacij± gali prisijungti prie u¾sakovo failù serverio (toliau UFS). Kai TFS prisijungia
prie UFS, jis nusiunèia jam tam tikrus prane¹imus. Tai gali bþti prane¹imas apie tai, kad çvyko klaida
atidarant fail± arba prane¹imas apie tai, kad failas paruo¹tas siuntimui. UFS atitinkamai reaguoja
ç tuos prane¹imus. Toliau (sekmes atveju) vyksta failo duomenù perdavimas is TFS ç UFS. Kai visas
failas nuskaitytas ir perduotas, TFS informuoja apie tai UFS, failo perdavimo sesija baigiasi, abu
failù serveriai u¾daro sujungim±.

4.2. Serverio vaidmuo
---------------------

Serveris yra labai svarbus, nors gali pasirodyti, jog jis beveik nedalyvauja failo perdavimo sesijoje.
I¹ tikrjùjù serveris sinchronizuoja klientù darb±. Kiekvieno kliento failù serveris ¾ino kaip perduoti
(ir priimti) fail± kitam (i¹ kito) klientui (kliento), bet jie (failù serveriai) nezino kaip susijungti
tarpusavyje, èia jiems padeda serveris. Kai pvz. 2 klientai "surado vienas kit±", serverio darbas nesi-
baigia, jis privalo parupinti t± patç ir kitiems klientams.


5. Programos schema
-------------------


        C.FS to A.FS connection and file transmission
  +-------------------------------------------------------+
  |                                                       |
  |                        getfile                        |
  |        +---------------------------------------+      |
  |        |                                      \|/     |
  |   +----------+                            +----------+|
  |   | CLIENT A |-------------------------+  |  SERVER  ||
  |   +----------+                         |  +----------+|    +----------+
  +-->|    FS    |                         +->| A: INFO  || +--| CLIENT C |
      +----------+                            +----------+| |  +----------+
                                           +->| B: INFO  |+-+--|    FS    |<-----------+
      +----------+                         |  +----------+  |  +----------+            |
      | CLIENT B |-------------------------+  | C: INFO  |<-+                          |
      +----------+                            +----------+                             |
      |    FS    |                            |    ...   |                             |
      +----------+                            +----------+                             |
                                                   |           info about A            |
                                                   +-----------------------------------+

6. Problemos
------------

Problemos atsirado kai band¾iau naudoti "blocking" ir "non-blocking" socket'us kartu. ©ç problem± buvo
i¹spresta, kai pradìjau naudoti "non-blocking" socket'us ir socket'ù darbo sinchronizacija buvo padaryta
"select()" f-jos pagalba.

7. Literatþra
-------------

UNIX man pages
FreeBSD Developers' Handbook
